name: Deployment - Reusable Workflow

on:
    workflow_call:

jobs:
    reuseble-deploy:
        environment:
            name: development
            url: https://${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
        outputs:
            APP_INGRESS_URL: ${{ steps.set-ingress-host-addres.outputs.APP_INGRESS_HOST }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: azure/setup-kubectl@v4
              with:
                version: v1.28.1
            - uses: azure/k8s-set-context@v4
              with: 
                method: kubeconfig
                kubeconfig: ${{ secrets.KUBECONFIG }}
            - run: >
                echo "INGRESS_IP=$(kubectl -n ingress-nginx get services
                ingress-nginx-controller -o 
                jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV
                - uses: cschleiden/replace-tokens@v1
                with:
                  tokenPrefix: '_{_'
                  tokenSuffix: '_}_'
                  files: '["kubernetes/development/*.yaml"]'
                env:
                  NAMESPACE: ${{ vars.NAMESPACE}}
                  REPLICAS: ${{ vars.REPLICAS}}
                  IMAGE: >-
                    ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha
                    }}
                  INGRESS_IP: ${{ env.INGRESS_IP}}
            - run: cat kubernetes/deployment/*.yaml
                
            - name: Create MongoDB Secrets
              run: |
                  kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
                  --from-literal=MONGO_URI=${{ env.MONGO_URI }} \
                  --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
                  --from-literal=MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
                  --save-config \
                  --dry-run=client \
                  -o yaml | kubectl apply -f -
        
            - name: Deploy to Dev Env
              run: |
                  kubectl apply -f kubernetes/deployments 
