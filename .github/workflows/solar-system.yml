name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        container:
          image: 'node:20'
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'

        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml
        
    code-coverage:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup nodejs
          uses: actions/setup-node@v4
          with:
            node-version: 18

        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'

        - name: Install Dependencies
          run: npm install

        - name: Coverage
          continue-on-error: true
          run: npm run coverage

        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5 

    docker:
      runs-on: ubuntu-latest
      permissions:
        packages: write 
      needs:
      - code-coverage
      - unit-testing
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup nodejs
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}
        
        - name: Build and push
          uses: docker/build-push-action@v6
          with:
            context: .
            push: true
            tags: 'ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}' 

    dev-deploy:
      runs-on: ubuntu-latest
      needs:
      - docker
      environment:
        name: development

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Install Kubectl
          uses: azure/setup-kubectl@v4
          with:
            version: 'v1.28.1'
          id: install

        - name: Setup kubecontext
          uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: '${{ secrets.KUBECONFIG }}'

        - name: Check kubectl
          run: kubectl version -o yaml
          continue-on-error: true

        - name: Save INGRESS_IP
          run: >
            echo "INGRESS_IP=$(kubectl -n ingress-nginx get services
            ingress-nginx-controller -o
            jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV
        
        - name: Replace kubernetes files
          uses: cschleiden/replace-tokens@v1
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: '["kubernetes/development/*.yaml"]'
          env:
            NAMESPACE: '${{ vars.NAMESPACE }}'
            REPLICAS: '${{ vars.REPLICAS }}'
            IMAGE: >-
              ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha
              }}
            INGRESS_IP: '${{ env.INGRESS_IP }}'

        - name: Check yaml manifest
          run: cat kubernetes/development/*.yaml
