name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
# env:
#   MONGO_URI: ${{ vars.MONGO_URI}}
#   MONGO_USERNAME: superuser
#   MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    
jobs:
  unit-testing:
        name: Unit Testing
        container:
          image: node:20
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        # - name: Setup NodeJS Version
        #   uses: actions/setup-node@v4
        #   with:
        #     node-version: 20

        - name: Cache NPM dependencies
          uses: actions/cache@v4
          id: cache-node-module
          with:
            path: ~/.npm
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

  docker:
    name: Containerize
    runs-on: ubuntu-latest
    needs: 
      - unit-testing
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: GHCR Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Docker Build & Pudh 
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: 'github.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}'

  dev-deploy:
    if: contains(github.ref, 'feature/')
    needs: docker
    uses: ./.github/workflows/reuse-deployment.yml
    secrets:
      k8s-kubeconfig: ${{ secrets.KUBECONFIG }}
      mongo-password: ${{ secrets.MONGO_PASSWORD}}
    with:
      mongo-url: ${{ vars.MONGO_URI }}
      environment: development
      k8s-manifests-dir: kubernetes/development 
  
  # dev-deploy job
  integration-test:
    needs: dev-deploy
    uses: ./.github/workflows/reusable-workflow.yml
    with:
      ingress-url: ${{ needs.dev-deploy.outputs.APP_INGRESS_URL }}
# next job

  # dev-integration-testing:
  #   name: Dev Integration Testing
  #   needs: dev-deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Test URL Output using Curl and JQ
  #       env:
  #         URL: ${{needs.dev-deploy.outputs.application-url}}
  #       run: |
  #         echo $URL
  #         echo "-------------------------------------------"
  #         curl https://$URL/live -s -k | jq -r .status | grep - live

  # prod-deploy:
  #   if: github.ref == 'refs/heads/main'
  #   needs: docker 
  #   uses: ./.github/workflows/reuse-deployment.yml
  #   secrets:
  #     k8s-kubeconfig: ${{ secrets.KUBECONFIG }}
  #     mongo-password: ${{ secrets.MONGO_PASSWORD}}
  #   with:
  #     mongo-url: ${{ vars.MONGO_URI }}
  #     environment: production
  #     k8s-manifests-dir: kubernetes/production


  # prod-integration-testing:
  #   name: PROD Integration Testing
  #   needs: prod-deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Test URL Output using Curl and JQ
  #       env:
  #         URL: ${{needs.prod-deploy.outputs.application-url}}
  #       run: |
  #         echo $URL
  #         echo "-------------------------------------------"
  #         curl https://$URL/live -s -k | jq -r .status | grep - live


  